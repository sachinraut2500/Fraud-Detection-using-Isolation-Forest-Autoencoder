# -*- coding: utf-8 -*-
"""Fraud Detection using Isolation Forest + Autoencoder.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pKYgrwW1BbCxeOcU-7lO2w31ebT7-_yO
"""

---

## Project 2: Fraud Detection using Isolation Forest + Autoencoder

---

### `fraud_detection_autoencoder.py`

```python
import numpy as np
import pandas as pd
from sklearn.ensemble import IsolationForest
from sklearn.preprocessing import StandardScaler
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Dense
from tensorflow.keras.optimizers import Adam
import matplotlib.pyplot as plt

def create_synthetic_data():
    np.random.seed(42)
    normal = np.random.normal(0, 1, (1000, 10))
    fraud = np.random.normal(4, 1, (50, 10))  # anomalies
    data = np.vstack([normal, fraud])
    return pd.DataFrame(data)

def build_autoencoder(input_dim):
    input_layer = Input(shape=(input_dim,))
    encoded = Dense(7, activation='relu')(input_layer)
    encoded = Dense(4, activation='relu')(encoded)
    decoded = Dense(7, activation='relu')(encoded)
    decoded = Dense(input_dim, activation='sigmoid')(decoded)

    autoencoder = Model(input_layer, decoded)
    autoencoder.compile(optimizer=Adam(learning_rate=0.001), loss='mse')
    return autoencoder

def main():
    data = create_synthetic_data()
    scaler = StandardScaler()
    data_scaled = scaler.fit_transform(data)

    iso = IsolationForest(contamination=0.05, random_state=42)
    iso_labels = iso.fit_predict(data_scaled)

    autoencoder = build_autoencoder(data.shape[1])
    autoencoder.fit(data_scaled, data_scaled, epochs=50, batch_size=32, shuffle=True, verbose=0)

    reconstructions = autoencoder.predict(data_scaled)
    mse = np.mean(np.power(data_scaled - reconstructions, 2), axis=1)

    threshold = np.percentile(mse, 95)

    fraud_pred = mse > threshold

    plt.figure(figsize=(10,5))
    plt.hist(mse, bins=50)
    plt.axvline(threshold, color='r', linestyle='--')
    plt.title('Reconstruction error with threshold')
    plt.show()

    print("Isolation Forest anomaly count:", (iso_labels == -1).sum())
    print("Autoencoder detected anomalies:", fraud_pred.sum())

if __name__ == "__main__":
    main()